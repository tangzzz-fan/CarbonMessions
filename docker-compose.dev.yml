services:
  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: carbon-emission-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3001:3000" # 映射到主机的3001端口
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3000/api
    depends_on:
      - nestjs-app
    networks:
      - app-network

  # 后端服务
  nestjs-app:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: carbon-emission-backend
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=carbon_emission_dev
      - DB_SYNC=true
      - JWT_SECRET=dev_jwt_secret_key_please_change_in_production
      - JWT_EXPIRES_IN=1d
      - PYTHON_PREDICTION_SERVICE_URL=http://prediction:8000
      - PREDICTION_API_KEY=pred_api_bfd8c9a7e35f4de1b82a6c8d9f0
    networks:
      - app-network

  # 预测服务
  prediction:
    build:
      context: ./predication
      dockerfile: Dockerfile.dev
    container_name: carbon-emission-prediction
    volumes:
      - ./predication:/app
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=True
      - DATA_COLLECTION_API_URL=http://nestjs-app:3000
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_PREDICTION_QUEUE=data_prediction_queue
      - LOG_LEVEL=INFO
      - API_KEY=pred_api_bfd8c9a7e35f4de1b82a6c8d9f0
    depends_on:
      - rabbitmq
    networks:
      - app-network

  # PostgreSQL 数据库
  postgres:
    image: postgres:14
    container_name: carbon-emission-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=carbon_emission_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # RabbitMQ 消息队列
  rabbitmq:
    image: rabbitmq:3-management
    container_name: carbon-emission-rabbitmq
    ports:
      - "5672:5672" # AMQP 端口
      - "15672:15672" # 管理界面端口
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network

  # 可选：pgAdmin 数据库管理工具
  pgadmin:
    image: dpage/pgadmin4
    container_name: carbon-emission-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

volumes:
  postgres_data:
  rabbitmq_data:
  pgadmin_data:


networks:
  app-network:
    driver: bridge
